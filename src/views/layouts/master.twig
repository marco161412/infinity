{# ############## Shared Variables in all views ################
| Variable                                           | Type     | Description                                                                                              |
|----------------------------------------------------|----------|----------------------------------------------------------------------------------------------------------|
| store                                              | Store    |                                                                                                          |
| store.id                                           | int      |                                                                                                          |
| store.name                                         | string   |                                                                                                          |
| store.username                                     | string   |                                                                                                          |
| store.description                                  | string   |                                                                                                          |
| store.slogan                                       | ?string  | * if feature in twilight.json                                                                            |
| store.logo                                         | string   |                                                                                                          |
| store.url                                          | string   |                                                                                                          |
| store.api                                          | string   | the api url for current store                                                                            |
| store.icon                                         | string   | *fav icon url                                                                                            |
| store.contacts                                     | object   | [mobile, phone, email, whatsapp, telegram], ex. store.contacts.email                                     |
| store.social                                       | object   | [instagram, snapchat, twitter, youtube, facebook, pinterest, maroof, whatsapp], ex. store.social.twitter |
| store.settings                                     | object   |                                                                                                          |
| store.settings.auth.email_allowed                  | bool     |                                                                                                          |
| store.settings.auth.mobile_allowed                 | bool     |                                                                                                          |
| store.settings.auth.is_email_required              | bool     |                                                                                                          |
| store.settings.cart.apply_coupon_enabled           | bool     | Does visitor allowed to applay coupon in cart page                                                       |
| store.settings.product.total_sold_enabled          | bool     |                                                                                                          |
| store.settings.product.fit_type                    | ?string  | null when equal product card size is off, or ['cover', 'contain']                                        |
| store.settings.category.testimonial_enabled        | bool     | Show random testimonials in category page                                                                |
| store.settings.tax.number                          | ?string  |                                                                                                          |
| store.settings.tax.certificate                     | ?string  | certificate image url                                                                                    |
| store.settings.tax.taxable_prices_enabled          | bool     | Does tax included in the prices ex product_price 100 & tax is 15, price will be 115                      |
| store.settings.rating_enabled                      | bool     | Is one of: store_enabled or shipping_enabled or products_enabled                                         |
| store.settings.arabic_numbers_enabled              | bool     | Does the merchant wants the numbers to be shown as Arabic format                                         |
| store.settings.is_multilingual                     | bool     |                                                                                                          |
| store.settings.currencies_enabled                  | bool     |     
| theme                                              | Theme    |                                                                                                          |
| theme.id                                           | int      |                                                                                                          |
| theme.name                                         | string   |                                                                                                          |
| theme.mode                                         | string   | `live`, `preview`                                                                                        |
| theme.is_rtl                                       | bool     |                                                                                                          |
| theme.translations_hash                            | int      | to be used in case merchant updated frontend store translations                                          |
| theme.color                                        | object   |                                                                                                          |
| theme.color.primary                                | string   |                                                                                                          |
| theme.color.text                                   | string   | suitable text color comparing to `theme.primary.color`, #000000, #FFFFFF                                 |
| theme.color.reverse_primary                        | string   |                                                                                                          |
| theme.color.reverse_text                           | string   | if `theme.text_color=#000000` means that `theme.reverse_text_color=#FFFFFF`                              |
| theme.color.is_dark                                | bool     | Does main store color `theme.primary.color` considered as dim color?                                     |
| theme.color.darker(float alpha, ?string hexColor)  | string   | get darker color from `theme.primary.color` or from passed color, `alpha` range from 0.0-1.0             |
| theme.color.lighter(float alpha, ?string hexColor) | string   | get lighter color from `theme.primary.color` or from passed color, `alpha` range from 0.0-1.0            |
| theme.font                                         | ?object  | Salla predefined font, null when the theme doesn't have `fonts` feature                                  |
| theme.font.name                                    | string   | DINNextLTArabic-Regular, Amazon-Ember, Apple, Dubai, Estedad                                             |
| theme.font.url                                     | string   | css full url ex: 'https://my_store.test/dist/fonts/default.css'                                          |
| theme.settings                                     | object   | dynamic object with values of the `settings` in twilight.json ex. `theme.settings.topnav_is_dark`        |
| theme.settings.set(settingName, value)             | string   | set global var, then get it {{theme.settings.get('my_var','fallback') }}                                 |
| theme.settings.get(settingName, default=null)      | mixed    | get theme setting ex `theme.settings.get('my_var', 'fallback')`                                          |
#}
<!DOCTYPE html>
<html lang="{{ user.language.code }}" dir="{{ user.language.dir }}">
<!-- بسم الله الرحمن الرحيم -->
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {{ theme.settings.set('placeholder', 'images/placeholder.png') }}

    {% include 'pages.partials.loading-screen-assets' %}

    <script defer data-cfasync="false" src="{{ 'product-card.js'|asset }}"></script>
    <script defer src="{{ 'main-menu.js'|asset }}"></script>

    {% block head_scripts %}{% endblock %}


    <script data-cfasync="false">
        window.header_is_sticky = "{{theme.settings.get('header_is_sticky', 'Default Value')}}"
        window.imageZoom = "{{theme.settings.get('imageZoom')}}"
        window.can_access_wallet = {{ user.can_access_wallet | json_encode }}
    </script>
    
    {% hook 'head:start' %}
    {% hook head %}
    {% block styles %}{% endblock %}
    <link rel="stylesheet" href="{{ 'app.css' | asset }}">
    <link rel="stylesheet" href="{{ theme.font.path|cdn }}"/>
    <link rel="stylesheet" href="{{ 'fonts/sallaicons.css'|cdn }}"/>
    
    <style>
        :root {
            /*theme colors*/
            --font-main:                        '{{theme.font.name}}';
            --color-primary:                     {{ theme.color.primary }};
            --color-primary-dark:                {{ theme.color.darker(0.15) }};
            --color-primary-light:               {{ theme.color.lighter(0.15) }};
            --color-primary-reverse:             {{ theme.color.reverse_text }};
            --color-dark-primary:                {{theme.settings.get('dark_primary_color') }};

            /*header colors*/
            --color-trans-header:                {{theme.settings.get('header_trans_color')}};
            --color-back-header:                 {{theme.settings.get('header_back_color')}};
            --color-text-header:                 {{theme.settings.get('header_color')}};
            --color-input-back-header:           {{theme.settings.get('header_back_search_color')}};
            --color-input-text-header:           {{theme.settings.get('header_text_search_color')}};
            --icons-color:                       {{theme.settings.get('icons_color') }};
            --icons-border-color:                {{theme.settings.get('icons_border_color') }};
            --icons-back-color:                  {{theme.settings.get('icons_back_color') }};
            --color-dark-back-header:            {{theme.settings.get('header_back_color_in_dark')}};
            --color-dark-color-header:           {{theme.settings.get('header_color_in_dark')}};
            --color-dark-input-back-header:      {{theme.settings.get('header_back_search_color_in_dark')}};
            --color-dark-input-text-header:      {{theme.settings.get('header_text_search_color_in_dark')}};
            --icons-dark-color:                  {{theme.settings.get('icons_color_in_dark') }};
            --icons-dark-border-color:           {{theme.settings.get('icons_border_color_in_dark') }};
            --icons-dark-back-color:             {{theme.settings.get('icons_back_color_in_dark') }};
            /*body colors*/
            --color-dark-back-footer:            {{theme.settings.get('footer_back_color_in_dark')}};
            --color-dark-color-footer:           {{theme.settings.get('footer_color_in_dark')}};
            --pagination-color:                  {{theme.settings.get('pagination_color')}};
            --color-background-body:             {{theme.settings.get('light_body_bacground')}};
            --main-text-color:                   {{theme.settings.get('main_body_color')}};
            --color-dark-background-body:        {{theme.settings.get('dark_body_bacground')}};
            --main-dark-text-color:              {{theme.settings.get('dark_main_body_color')}};
            /*card colors light*/
            --card-box-shadow-color:             {{theme.settings.get('card_box_shadow_color')}};
            --card-back-color:                   {{theme.settings.get('card_back_color')}};
            --img-back-color:                    {{theme.settings.get('img_back_color')}};
            --promotion-back-color:              {{theme.settings.get('promotion_back_color')}};
            --promotion-title-color:             {{theme.settings.get('promotion_title_color')}};
            --product-title-color:               {{theme.settings.get('product_title_color')}};
            --product-subtitle-color:            {{theme.settings.get('product_subtitle_color')}};
            --product-price-color:               {{theme.settings.get('product_price_color')}};
            --product-discount-price-color:      {{theme.settings.get('product_discount_price_color')}};
            --add-btn-back-color:                {{theme.settings.get('add_btn_back_color')}};
            --add-btn-text-color:                {{theme.settings.get('add_btn_text_color')}};
            --show-btn-back-color:               {{theme.settings.get('show_btn_back_color')}};
            --show-btn-text-color:               {{theme.settings.get('show_btn_text_color')}};
            --wishlist-btn-back-color:           {{theme.settings.get('wishlist_btn_back_color')}};
            --wishlist-btn-text-color:           {{theme.settings.get('wishlist_btn_text_color')}};
            /*card colors dark*/
            --card-box-shadow-color-dark:        {{theme.settings.get('card_box_shadow_color_dark')}};
            --card-back-color-dark:              {{theme.settings.get('card_back_color_dark')}};
            --img-back-color-dark:               {{theme.settings.get('img_back_color_dark')}};
            --promotion-back-color-dark:         {{theme.settings.get('promotion_back_color_dark')}};
            --promotion-title-color-dark:        {{theme.settings.get('promotion_title_color_dark')}};
            --product-title-color-dark:          {{theme.settings.get('product_title_color_dark')}};
            --product-subtitle-color-dark:       {{theme.settings.get('product_subtitle_color_dark')}};
            --product-price-color-dark:          {{theme.settings.get('product_price_color_dark')}};
            --product-discount-price-color-dark: {{theme.settings.get('product_discount_price_color_dark')}};
            --add-btn-back-color-dark:           {{theme.settings.get('add_btn_back_color_dark')}};
            --add-btn-text-color-dark:           {{theme.settings.get('add_btn_text_color_dark')}};
            --show-btn-back-color-dark:          {{theme.settings.get('show_btn_back_color_dark')}};
            --show-btn-back-color-dark-hoverd:   {{theme.settings.get('show_btn_back_color_dark_hoverd')}};
            --show-btn-text-color-dark:          {{theme.settings.get('show_btn_text_color_dark')}};
            --wishlist-btn-back-color-dark:      {{theme.settings.get('wishlist_btn_back_color_dark')}};
            --wishlist-btn-text-color-dark:      {{theme.settings.get('wishlist_btn_text_color_dark')}};
        }   
    </style>
    {# tracking services, custom css feature. #}
    {% hook 'head:end' %}
</head>
<body id="app" class="overflow-x-hidden {% hook 'body:classes' %}
  {{ theme.settings.get('footer_is_dark') ? ' footer-is-dark' : ' footer-is-light' }}
  {{ theme.settings.get('topnav_is_dark') ? ' topnav-is-dark' : '' }}
  {{ theme.settings.get('sticky_add_to_cart') ? ' is-sticky-product-bar' : '' }}
  ">
  <div class="loader-init"></div>
<noscript>
    To get full functionality of this site you need to enable JavaScript. Here is how
    <a href="https://www.enable-javascript.com/" rel="noreferrer"
       target="_blank">To enable JavaScript on webpage</a>.
</noscript>
<div class="app-inner flex flex-col min-h-full">
    {% hook 'body:start' %}
    {% component 'header.header' %}
    {% block content %}{% endblock %}
    {% component 'footer.footer' %}
</div>
{% hook 'body:end' %}
<script defer src="{{ 'app.js' | asset }}"></script>

{# Twilight Components #}
<salla-offer-modal></salla-offer-modal>
<salla-search></salla-search>

{% if user.type=='guest' %}
    <salla-login-modal></salla-login-modal>
{% endif %}
{% block scripts %}{% endblock %}
</body>
</html>
